.macro imagew(%address,%position,%length,%height)
	lw %length,0(%address)
	lw %height,4(%address)
	
	li t4,320
	li t2,52
	sub t2,t2,%height
	mul t2,t2,t4
	add %position,%position,t2
	sub t4,t4,%length
				
	li t0,0
	li t1,0
	li t3,-1
	addi %address,%address,8
IMAGE:	beq t0,%height,END_IMAGE
	beq t1,%length,CORRECTION
	lw t2,0(%address)
	beq t2,t3,MASK
	sw t2,0(%position)
MASK:	addi t1,t1,1
	addi %address,%address,4
	addi %position,%position,4
	j IMAGE
CORRECTION:
	li t1,0
	addi,t0,t0,1
	add %position,%position,t4
	j IMAGE
END_IMAGE:
.end_macro

.macro image(%address,%position,%length,%height)
	lw %length,0(%address)
	lw %height,4(%address)
	
	li t4,320
	li t2,52
	sub t2,t2,%height
	mul t2,t2,t4
	add %position,%position,t2
	sub t4,t4,%length
				
	li t0,0
	li t1,0
	li t3,-1
	addi %address,%address,8
IMAGE:	beq t0,%height,END_IMAGE
	beq t1,%length,CORRECTION
	lb t2,0(%address)
	beq t2,t3,MASK
	sb t2,0(%position)
MASK:	addi t1,t1,1
	addi %address,%address,1
	addi %position,%position,1
	j IMAGE
CORRECTION:
	li t1,0
	addi,t0,t0,1
	add %position,%position,t4
	j IMAGE
END_IMAGE:
.end_macro

.macro image_move(%address,%position,%length,%height)
	lw %length,0(%address)
	lw %height,4(%address)
	lw t6,8(%address)
	li t4,320
	li t2,52
	sub t2,t2,%height
	mul t2,t2,t4
	add %position,%position,t2
	sub t4,t4,%length
	add %position,%position,t6
	
	li t0,0
	li t1,0
	li t3,-1
	addi %address,%address,12
IMAGE:	beq t0,%height,END_IMAGE
	beq t1,%length,CORRECTION
	lb t2,0(%address)
	beq t2,t3,MASK
	sb t2,0(%position)
MASK:	addi t1,t1,1
	addi %address,%address,1
	addi %position,%position,1
	j IMAGE
CORRECTION:
	li t1,0
	addi,t0,t0,1
	add %position,%position,t4
	j IMAGE
END_IMAGE:
.end_macro



.macro advance_animation(%image_adress,%time)
	la t0,current_animation
	lw t0,0(t0)
	li %image_adress,4
	mul %image_adress,%image_adress,%time
	add %image_adress,%image_adress,t0
	lw %image_adress,0(%image_adress)
	add %image_adress,%image_adress,t0
.end_macro


.macro pontos()
	la s0,yingyang
	la t0,pontos
	lb t0,0(t0)
	beq t0,zero,NEXT_YY
	addi t0,t0,-1
	li t1,640
	mul t0,t0,t1
	add s0,s0,t0
	
	li s8,0xFF002828
			#frame changer
	li t0,0
	li t1,0
	li t3,-1
	li s1,40
	li s2,16
YY:	beq t0,s2,NEXT_YY
	beq t1,s1,CORRE_YY
		lw t4,0(s0)
		sw t4,0(s8)
		addi s0,s0,4
		addi s8,s8,4
		addi t1,t1,4
		j YY
CORRE_YY:
	li t1,0
	addi s8,s8,280
	addi t0,t0,1
	j YY
NEXT_YY:
	la s0,yingyang
	addi s0,s0,1920
	addi s0,s0,640
	la t0,pontos
	lb t0,1(t0)
	beq t0,zero,END_YY	
	addi t0,t0,-1
	li t1,640
	mul t0,t0,t1
	add s0,s0,t0
	
	li s8,0xFF0028F0 #frame changer
	
	li t0,0
	li t1,0
	li s1,40
	li s2,16
YY1:	beq t0,s2,END_YY
	beq t1,s1,CORRE_YY1
		lw t4,0(s0)
		sw t4,0(s8)
		addi s0,s0,4
		addi s8,s8,4
		addi t1,t1,4
		j YY1
CORRE_YY1:
	li t1,0
	addi s8,s8,280
	addi t0,t0,1
	j YY1
END_YY:
.end_macro
.macro refresh()
	mv t1,s10
	li t2,0x38
	loop:	beq t1,s11,END
		sb t2,0(t1)
		addi t1,t1,1
		j loop
END:	
.end_macro

.macro dan()
	la t0,fases
	li t2,8
	lw t1,0(t0)
	la t0,dan
	mul t1,t1,t2
	add a0,t0,t1
	li a3,0x3800
	li a2,60
	li a1,42
	li a7,104
	ecall
.end_macro

.macro animation2()

	la t6,animation_state
	lb t1,2(t6)
	lb t2,3(t6)

	beq t1,zero,CONTI2
	mv s0,s6
	beq t1,t2,ESTA2
	beq t5,s5,CONTI_IF2		
			
	addi t1,t1,-1
	sb t1,2(t6)
	beq t1,zero,CONTI2
	advance_animation2(s3,t1)
	image(s3,s0,s1,s2)
	j PLAYER1
CONTI_IF2:

	addi t1,t1,1
	sb t1,2(t6)
	advance_animation2(s3,t1)
	image(s3,s0,s1,s2)
	j PLAYER1
ESTA2:	
	beq t5,s5,ESTA_IF2
	addi t1,t1,-1
	sb t1,2(t6)
ESTA_IF2:
	advance_animation2(s3,t1)
	image(s3,s0,s1,s2)
	j PLAYER1
CONTI2:	
.end_macro


.data
pontos: .byte 1,1
current_animation: .word 0,0
fases: .word 0
dan: .string " NOVICE"," 1TH DAN"," 2TH DAN"," 3TH DAN"," 4TH DAN"," 5TH DAN"," 6TH DAN"," 7TH DAN"," 8TH DAN"," 9TH DAN","10TH DAN"
teste: .string "teste"
.include "yingyang.s"
.include "animacoes\high_punch\high_punch - Copia.s"
.include "\animacoes\Foward_Somesault\P1\Foward_Somesault_P1.s"
.include "\animacoes\player1idle.s"
.include "stage.s"
.include "\MACROSv21.s"
.text
	
	li s9,0xFF00C5D4	
	li s10,0xFF000000	
	li s11,0xFF012C00	
	
	refresh()
	
	pontos()
	dan()
	li a7,10
	ecall

.include "\SYSTEMv21.s"
